// Generated by view binder compiler. Do not edit!
package com.example.beaux_arts.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.beaux_arts.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityItineraryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView itineraireDescription;

  @NonNull
  public final ImageView itineraireMapView;

  @NonNull
  public final TextView itineraryName;

  @NonNull
  public final RecyclerView oeuvresCollectionVIew;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  private ActivityItineraryBinding(@NonNull LinearLayout rootView,
      @NonNull TextView itineraireDescription, @NonNull ImageView itineraireMapView,
      @NonNull TextView itineraryName, @NonNull RecyclerView oeuvresCollectionVIew,
      @NonNull TextView textView3, @NonNull TextView textView5, @NonNull TextView textView6) {
    this.rootView = rootView;
    this.itineraireDescription = itineraireDescription;
    this.itineraireMapView = itineraireMapView;
    this.itineraryName = itineraryName;
    this.oeuvresCollectionVIew = oeuvresCollectionVIew;
    this.textView3 = textView3;
    this.textView5 = textView5;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityItineraryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityItineraryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_itinerary, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityItineraryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.itineraireDescription;
      TextView itineraireDescription = ViewBindings.findChildViewById(rootView, id);
      if (itineraireDescription == null) {
        break missingId;
      }

      id = R.id.itineraireMapView;
      ImageView itineraireMapView = ViewBindings.findChildViewById(rootView, id);
      if (itineraireMapView == null) {
        break missingId;
      }

      id = R.id.itineraryName;
      TextView itineraryName = ViewBindings.findChildViewById(rootView, id);
      if (itineraryName == null) {
        break missingId;
      }

      id = R.id.oeuvresCollectionVIew;
      RecyclerView oeuvresCollectionVIew = ViewBindings.findChildViewById(rootView, id);
      if (oeuvresCollectionVIew == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      return new ActivityItineraryBinding((LinearLayout) rootView, itineraireDescription,
          itineraireMapView, itineraryName, oeuvresCollectionVIew, textView3, textView5, textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
