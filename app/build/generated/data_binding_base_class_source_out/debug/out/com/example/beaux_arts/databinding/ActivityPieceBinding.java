// Generated by view binder compiler. Do not edit!
package com.example.beaux_arts.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.beaux_arts.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPieceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton pieceAudio;

  @NonNull
  public final TextView pieceDescription;

  @NonNull
  public final ImageButton pieceGlasses;

  @NonNull
  public final ImageView pieceImageView;

  @NonNull
  public final ImageButton pieceMap;

  @NonNull
  public final TextView pieceName;

  @NonNull
  public final RecyclerView pieceRecyclerview;

  private ActivityPieceBinding(@NonNull LinearLayout rootView, @NonNull ImageButton pieceAudio,
      @NonNull TextView pieceDescription, @NonNull ImageButton pieceGlasses,
      @NonNull ImageView pieceImageView, @NonNull ImageButton pieceMap, @NonNull TextView pieceName,
      @NonNull RecyclerView pieceRecyclerview) {
    this.rootView = rootView;
    this.pieceAudio = pieceAudio;
    this.pieceDescription = pieceDescription;
    this.pieceGlasses = pieceGlasses;
    this.pieceImageView = pieceImageView;
    this.pieceMap = pieceMap;
    this.pieceName = pieceName;
    this.pieceRecyclerview = pieceRecyclerview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPieceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPieceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_piece, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPieceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pieceAudio;
      ImageButton pieceAudio = ViewBindings.findChildViewById(rootView, id);
      if (pieceAudio == null) {
        break missingId;
      }

      id = R.id.pieceDescription;
      TextView pieceDescription = ViewBindings.findChildViewById(rootView, id);
      if (pieceDescription == null) {
        break missingId;
      }

      id = R.id.pieceGlasses;
      ImageButton pieceGlasses = ViewBindings.findChildViewById(rootView, id);
      if (pieceGlasses == null) {
        break missingId;
      }

      id = R.id.pieceImageView;
      ImageView pieceImageView = ViewBindings.findChildViewById(rootView, id);
      if (pieceImageView == null) {
        break missingId;
      }

      id = R.id.pieceMap;
      ImageButton pieceMap = ViewBindings.findChildViewById(rootView, id);
      if (pieceMap == null) {
        break missingId;
      }

      id = R.id.pieceName;
      TextView pieceName = ViewBindings.findChildViewById(rootView, id);
      if (pieceName == null) {
        break missingId;
      }

      id = R.id.pieceRecyclerview;
      RecyclerView pieceRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (pieceRecyclerview == null) {
        break missingId;
      }

      return new ActivityPieceBinding((LinearLayout) rootView, pieceAudio, pieceDescription,
          pieceGlasses, pieceImageView, pieceMap, pieceName, pieceRecyclerview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
